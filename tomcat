# 첫 번째 단계: 빌드 단계
FROM alpine:latest as builder

# 필요한 패키지를 업데이트하고 설치합니다.
RUN apk update && \
    apk add --no-cache openjdk8 curl tar

# 환경 변수를 설정합니다.
ENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk
ENV CATALINA_HOME /usr/local/tomcat
ENV TOMCAT_VERSION 9.0.89

# Tomcat을 다운로드하여 압축을 풉니다.
RUN curl -O https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.89/bin/apache-tomcat-9.0.89.tar.gz && \
    mkdir -p $CATALINA_HOME && \
    tar -xvf apache-tomcat-9.0.89.tar.gz -C $CATALINA_HOME --strip-components=1 && \
    rm apache-tomcat-9.0.89.tar.gz

# Local에 있는 jsp 파일을 Tomcat ROOT 경로로 복사해 준다.
COPY index.jsp /usr/local/tomcat/webapps/ROOT/
COPY login.jsp /usr/local/tomcat/webapps/ROOT/
COPY register.jsp /usr/local/tomcat/webapps/ROOT/

# 두 번째 단계: 실행 단계
FROM alpine:latest

# 필요한 패키지를 업데이트하고 Java 런타임을 설치합니다.
RUN apk update && \
    apk add --no-cache openjdk8

# 환경 변수를 설정합니다.
ENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk
ENV CATALINA_HOME /usr/local/tomcat
ENV PATH $JAVA_HOME/bin:$CATALINA_HOME/bin:$PATH

# 빌드 단계에서 Tomcat을 복사합니다.
COPY --from=builder $CATALINA_HOME $CATALINA_HOME
          
# Tomcat 포트를 노출합니다.
EXPOSE 8080 
         
# Tomcat을 실행합니다.
CMD ["catalina.sh", "run"]
